C#，都提供了自动垃圾回收机制。在对象不再被引用后，系统自动负责销毁对象，回收内存。
1、废弃对象的回收时间是不确定的，即你无法确定系统在何时会执行垃圾回收。每个垃圾收集器都会按照一定的算法执行垃圾收集，但它何时执行，每次执行回收哪些对象是不确定的。
 2、它使程序员丧失了部分的控制能力，相应的在系统运行过程中，在性能上也会有一定的损失。



Random rr=new Random();
int k=rr.Next(10,100)
10<=k<100之间的随机数


子类继承父类后，子类如果比父类多了个属性则构造函数有两种方式
第一种：父类，子类的属性都设公有，子类父类都要写一个空的构造函数，然后再子类写给
新的属性赋值的时候如果要用到父类的属性就用base.多少就可以了


第二种，构造函数这样写
public  B(int a ,int b):base(a) 这样就可以把两个都写好
{


}



